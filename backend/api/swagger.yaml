openapi: 3.0.4
info:
  title: ULearn API Documentation
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  contact:
    email: thomas@tksnetwork.com
  version: 1.0.0
servers:
  - url: http://localhost:{port}/api/{basePath}
    description: The development API server
    variables:
      username:
        default: demo
      port:
        enum:
          - '3000'
          - '5000'
        default: '3000'
      basePath:
        default: v1
tags:
  - name: sets
    description: Everything about requesting data for Note Sets.
  - name: users
    description: Everything about requesting data for Users
paths:
  /sets:
    get:
      tags:
        - sets
      summary: Get all sets.
      operationId: getAllSets
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseBody'
                  - type: object
                    properties:
                      results:
                        type: number
                        minimum: 1
                      data:
                        properties:
                          sets:
                            $ref: '#/components/schemas/SetsProperty'
              example:
                status: success
                results: 2
                data:
                  sets:
                    - name: My Sociology Note Set
                      description: A study set for SOC1001
                      id: dsgkbh478928fjo0
                      _id: dsgkbh478928fjo0
                      __v: 0
                    - name: PSYC3001 Note Set
                      description: A study set for first semester PSYC3001
                      id: u8792bfu9e90348b9
                      _id: u8792bfu9e90348b9
                      __v: 0

        '400':
          description: < TODO > Invalid ID supplied
        '404':
          description: < TODO > Pet not found
        '422':
          description: < TODO > Validation exception
        default:
          description: < TODO > Unexpected error
  /sets/{setId}:
    get:
      tags:
        - sets
      description: Returns a Set based on ID.
      summary: Find Set by ID
      operationId: getSet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseBody'
                  - type: object
                    properties:
                      data:
                        properties:
                          set:
                            allOf:
                              - $ref: '#/components/schemas/SetsProperty'
                              - type: array
                                items:
                                  type: object
                                  properties:
                                    notes:
                                      $ref: '#/components/schemas/NotesProperty'
              example:
                status: success
                data:
                  set:
                    - _id: dsgkbh478928fjo0
                      name: My Sociology Note Set
                      description: A study set for SOC1001
                      __v: 0
                      notes:
                        - _id: bi8d9034h20nf80998c80
                          term: What is Sociology?
                          definition: The systematic study of social interaction. It's a social science.
                          set: dsgkbh478928fjo0
                          __v: 0
                          id: bi8d9034h20nf80998c80
                        - _id: ycv89d0byf84f8v0982bnd89
                          term: What are the two siblings to Sociology?
                          definition: Psychology and Anthropology.
                          set: dsgkbh478928fjo0
                          __v: 0
                          id: ycv89d0byf84f8v0982bnd89
                      id: dsgkbh478928fjo0
    parameters:
      - name: setId
        in: path
        description: ID of Set to use
        required: true
        schema:
          type: array
          items:
            type: string
        style: simple
  /users:
    get:
      tags:
        - users
      summary: Gets all the users
      operationId: getAllUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseBody'
                  - type: object
                    properties:
                      results:
                        type: number
                        minimum: 1
                      data:
                        properties:
                          users:
                            $ref: '#/components/schemas/UsersProperty'
              example:
                status: success
                results: 2
                data:
                  users:
                    - _id: bchus989scbuojk0
                      name: user1
                      userName: user.123
                      email: user1@email.com
                      role: user
                    - _id: h7u8cdbcu9039jc0
                      name: user2
                      userName: userTwo
                      email: user2@email.com
                      role: user
components:
  schemas:
    ResponseBody:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
    NotesProperty:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
          term:
            type: string
          definition:
            type: string
          set:
            type: string
          __v:
            type: number
          id:
            type: string
    SetsProperty:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          id:
            type: string
          _id:
            type: string
          _v:
            type: number
    UsersProperty:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
          name:
            type: string
          userName:
            type: string
          email:
            type: string
          role:
            type: string
            enum:
              - admin
              - user
